@page "/fluent-demo"
@using Microsoft.AspNetCore.Components

<!-- 
    Fluent UI Demo Page
    This page demonstrates Microsoft's Fluent UI design system integration in Blazor.
    Key design principles:
    - Clean typography hierarchy using Segoe UI font family
    - Consistent spacing using 4px grid system  
    - Accessible color palette with proper contrast ratios
    - Responsive grid layout that adapts to screen sizes
    - Semantic use of icons and visual indicators
-->

<!-- Fluent UI Web Components and Styles -->
<style>
    /* Fluent UI Design Tokens - Following Microsoft Design Language */
    :root {
        /* Fluent UI Color Palette */
        --colorNeutralForeground1: #242424;
        --colorNeutralForeground2: #424242;
        --colorNeutralForeground3: #616161;
        --colorNeutralBackground1: #ffffff;
        --colorNeutralBackground2: #f5f5f5;
        --colorNeutralBackground3: #f0f0f0;
        --colorNeutralStroke1: #d1d1d1;
        --colorNeutralStroke2: #c7c7c7;
        
        /* Brand Colors */
        --colorBrandBackground: #0078d4;
        --colorBrandBackgroundHover: #106ebe;
        --colorBrandBackgroundPressed: #005a9e;
        --colorBrandForeground1: #0078d4;
        --colorBrandForeground2: #106ebe;
        
        /* Semantic Colors */
        --colorStatusSuccessBackground1: #dff6dd;
        --colorStatusSuccessForeground1: #107c10;
        --colorStatusWarningBackground1: #fff4ce;
        --colorStatusWarningForeground1: #797673;
        --colorStatusDangerBackground1: #fde7e9;
        --colorStatusDangerForeground1: #d13438;
        
        /* Typography Scale - Following Fluent Design System */
        --fontSizeBase100: 10px;
        --fontSizeBase200: 12px;
        --fontSizeBase300: 14px;
        --fontSizeBase400: 16px;
        --fontSizeBase500: 20px;
        --fontSizeBase600: 24px;
        --fontSizeHero700: 28px;
        --fontSizeHero800: 32px;
        --fontSizeHero900: 40px;
        --fontSizeHero1000: 68px;
        
        /* Font Weights */
        --fontWeightRegular: 400;
        --fontWeightMedium: 500;
        --fontWeightSemibold: 600;
        --fontWeightBold: 700;
        
        /* Border Radius - Consistent with Fluent UI */
        --borderRadiusNone: 0;
        --borderRadiusSmall: 2px;
        --borderRadiusMedium: 4px;
        --borderRadiusLarge: 6px;
        --borderRadiusXLarge: 8px;
        
        /* Shadows - Fluent UI elevation system */
        --shadow2: 0px 0.3px 0.9px rgba(0, 0, 0, 0.12), 0px 1.6px 3.6px rgba(0, 0, 0, 0.16);
        --shadow4: 0px 0.6px 1.8px rgba(0, 0, 0, 0.12), 0px 3.2px 7.2px rgba(0, 0, 0, 0.16);
        --shadow8: 0px 1.2px 3.6px rgba(0, 0, 0, 0.12), 0px 6.4px 14.4px rgba(0, 0, 0, 0.16);
        
        /* Spacing Scale - 4px grid system */
        --spacingHorizontalNone: 0;
        --spacingHorizontalXXS: 2px;
        --spacingHorizontalXS: 4px;
        --spacingHorizontalSNudge: 6px;
        --spacingHorizontalS: 8px;
        --spacingHorizontalMNudge: 10px;
        --spacingHorizontalM: 12px;
        --spacingHorizontalL: 16px;
        --spacingHorizontalXL: 20px;
        --spacingHorizontalXXL: 24px;
        --spacingHorizontalXXXL: 32px;
    }

    /* Typography Classes - Fluent UI Text Styles */
    .fluent-display {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeHero1000);
        font-weight: var(--fontWeightBold);
        line-height: 1.2;
        color: var(--colorNeutralForeground1);
        margin: 0 0 var(--spacingHorizontalXXL) 0;
    }

    .fluent-title-1 {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeHero900);
        font-weight: var(--fontWeightSemibold);
        line-height: 1.25;
        color: var(--colorNeutralForeground1);
        margin: 0 0 var(--spacingHorizontalXL) 0;
    }

    .fluent-title-2 {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeHero800);
        font-weight: var(--fontWeightSemibold);
        line-height: 1.3;
        color: var(--colorNeutralForeground1);
        margin: 0 0 var(--spacingHorizontalL) 0;
    }

    .fluent-title-3 {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeHero700);
        font-weight: var(--fontWeightSemibold);
        line-height: 1.3;
        color: var(--colorNeutralForeground1);
        margin: 0 0 var(--spacingHorizontalL) 0;
    }

    .fluent-subtitle-1 {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeBase500);
        font-weight: var(--fontWeightSemibold);
        line-height: 1.4;
        color: var(--colorNeutralForeground2);
        margin: 0 0 var(--spacingHorizontalM) 0;
    }

    .fluent-body-1 {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeBase400);
        font-weight: var(--fontWeightRegular);
        line-height: 1.5;
        color: var(--colorNeutralForeground1);
        margin: 0 0 var(--spacingHorizontalL) 0;
    }

    .fluent-body-2 {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeBase300);
        font-weight: var(--fontWeightRegular);
        line-height: 1.5;
        color: var(--colorNeutralForeground2);
        margin: 0 0 var(--spacingHorizontalM) 0;
    }

    .fluent-caption {
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeBase200);
        font-weight: var(--fontWeightRegular);
        line-height: 1.4;
        color: var(--colorNeutralForeground3);
        margin: 0;
    }

    /* Button Components - Following Fluent UI Design */
    .fluent-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: var(--spacingHorizontalS);
        padding: var(--spacingHorizontalMNudge) var(--spacingHorizontalL);
        border: 1px solid transparent;
        border-radius: var(--borderRadiusMedium);
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeBase300);
        font-weight: var(--fontWeightMedium);
        line-height: 1.4;
        cursor: pointer;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        text-decoration: none;
        min-height: 32px;
        box-sizing: border-box;
        outline: none;
        position: relative;
    }

    .fluent-button:focus-visible {
        outline: 2px solid var(--colorBrandBackground);
        outline-offset: 2px;
    }

    .fluent-button-primary {
        background-color: var(--colorBrandBackground);
        color: white;
        border-color: var(--colorBrandBackground);
    }

    .fluent-button-primary:hover:not(:disabled) {
        background-color: var(--colorBrandBackgroundHover);
        border-color: var(--colorBrandBackgroundHover);
    }

    .fluent-button-primary:active:not(:disabled) {
        background-color: var(--colorBrandBackgroundPressed);
        border-color: var(--colorBrandBackgroundPressed);
    }

    .fluent-button-secondary {
        background-color: var(--colorNeutralBackground1);
        color: var(--colorNeutralForeground1);
        border-color: var(--colorNeutralStroke1);
    }

    .fluent-button-secondary:hover:not(:disabled) {
        background-color: var(--colorNeutralBackground2);
        border-color: var(--colorNeutralStroke2);
    }

    .fluent-button-secondary:active:not(:disabled) {
        background-color: var(--colorNeutralBackground3);
    }

    .fluent-button-subtle {
        background-color: transparent;
        color: var(--colorNeutralForeground1);
        border-color: transparent;
    }

    .fluent-button-subtle:hover:not(:disabled) {
        background-color: var(--colorNeutralBackground2);
        color: var(--colorNeutralForeground1);
    }

    .fluent-button-subtle:active:not(:disabled) {
        background-color: var(--colorNeutralBackground3);
    }

    /* Message Bar Component - Semantic feedback */
    .fluent-messagebar {
        display: flex;
        align-items: flex-start;
        gap: var(--spacingHorizontalM);
        padding: var(--spacingHorizontalM) var(--spacingHorizontalL);
        border-radius: var(--borderRadiusMedium);
        font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
        font-size: var(--fontSizeBase300);
        line-height: 1.4;
        margin-bottom: var(--spacingHorizontalL);
        position: relative;
    }

    .fluent-messagebar-success {
        background-color: var(--colorStatusSuccessBackground1);
        color: var(--colorStatusSuccessForeground1);
        border-left: 3px solid var(--colorStatusSuccessForeground1);
    }

    .fluent-messagebar-warning {
        background-color: var(--colorStatusWarningBackground1);
        color: var(--colorStatusWarningForeground1);
        border-left: 3px solid #f7630c;
    }

    .fluent-messagebar-error {
        background-color: var(--colorStatusDangerBackground1);
        color: var(--colorStatusDangerForeground1);
        border-left: 3px solid var(--colorStatusDangerForeground1);
    }

    .fluent-messagebar-icon {
        flex-shrink: 0;
        width: 16px;
        height: 16px;
        margin-top: 2px;
    }

    /* Card Components - Fluent UI Surface */
    .fluent-card {
        background-color: var(--colorNeutralBackground1);
        border: 1px solid var(--colorNeutralStroke2);
        border-radius: var(--borderRadiusLarge);
        box-shadow: var(--shadow2);
        padding: var(--spacingHorizontalXXL);
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .fluent-card:hover {
        box-shadow: var(--shadow4);
        border-color: var(--colorNeutralStroke1);
    }

    .fluent-card-elevated {
        box-shadow: var(--shadow8);
        border: none;
    }

    /* Grid Layout - Responsive Design */
    .fluent-grid {
        display: grid;
        gap: var(--spacingHorizontalXXL);
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        margin: var(--spacingHorizontalXXL) 0;
    }

    .fluent-stack {
        display: flex;
        flex-direction: column;
        gap: var(--spacingHorizontalL);
    }

    .fluent-stack-horizontal {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: var(--spacingHorizontalL);
        flex-wrap: wrap;
    }

    /* Container Layout */
    .fluent-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: var(--spacingHorizontalXXXL) var(--spacingHorizontalXL);
    }

    /* Header Section */
    .fluent-header {
        text-align: center;
        margin-bottom: var(--spacingHorizontalXXXL);
        padding: var(--spacingHorizontalXXXL) 0;
        background: linear-gradient(135deg, #0078d4 0%, #106ebe 100%);
        color: white;
        border-radius: var(--borderRadiusXLarge);
        position: relative;
        overflow: hidden;
    }

    .fluent-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><g fill="%23ffffff" fill-opacity="0.05"><circle cx="7" cy="7" r="2"/><circle cx="27" cy="7" r="2"/><circle cx="47" cy="7" r="2"/><circle cx="7" cy="27" r="2"/><circle cx="27" cy="27" r="2"/><circle cx="47" cy="27" r="2"/><circle cx="7" cy="47" r="2"/><circle cx="27" cy="47" r="2"/><circle cx="47" cy="47" r="2"/></g></g></svg>') repeat;
        opacity: 0.1;
    }

    .fluent-header > * {
        position: relative;
        z-index: 1;
    }

    .fluent-header .fluent-title-1 {
        color: white;
        font-size: var(--fontSizeHero900);
        margin-bottom: var(--spacingHorizontalL);
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .fluent-header .fluent-subtitle-1 {
        color: rgba(255, 255, 255, 0.9);
        font-size: var(--fontSizeBase500);
        font-weight: var(--fontWeightRegular);
        margin-bottom: 0;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    /* Accessibility Enhancements */
    @@media (prefers-reduced-motion: reduce) {
        .fluent-button, .fluent-card {
            transition: none;
        }
    }

    /* High Contrast Support */
    @@media (prefers-contrast: high) {
        .fluent-button-primary {
            border: 2px solid;
        }
        
        .fluent-card {
            border: 2px solid var(--colorNeutralStroke1);
        }
        
        .fluent-messagebar {
            border: 2px solid;
        }
    }

    /* Responsive Typography */
    @@media (max-width: 768px) {
        .fluent-title-1 {
            font-size: var(--fontSizeHero800);
        }
        
        .fluent-container {
            padding: var(--spacingHorizontalXL) var(--spacingHorizontalL);
        }
        
        .fluent-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="fluent-container">
    <!-- Hero Header Section -->
    <header class="fluent-header">
        <h1 class="fluent-title-1">Fluent UI Design System</h1>
        <p class="fluent-subtitle-1">Modern, accessible, and cohesive design language for cross-tenant communication</p>
    </header>

    <!-- Success Message Bar - Demonstrates semantic feedback -->
    <div class="fluent-messagebar fluent-messagebar-success">
        <svg class="fluent-messagebar-icon" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
            <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0Zm3.646 4.146-4.5 4.5a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L7 7.293l4.146-4.147a.5.5 0 0 1 .708.708Z"/>
        </svg>
        <div>
            <strong>Welcome to Fluent UI!</strong> This demo showcases Microsoft's design system with proper color contrast, typography hierarchy, and accessible interactions.
        </div>
    </div>

    <!-- Typography Showcase Section -->
    <section class="fluent-card" style="margin-bottom: var(--spacingHorizontalXXXL);">
        <h2 class="fluent-title-2">Typography Hierarchy</h2>
        <p class="fluent-body-1">
            Fluent UI uses consistent typography scales and weights to create clear information hierarchy. 
            The font family prioritizes <code>Segoe UI</code> on Windows for optimal system integration.
        </p>
        
        <div class="fluent-stack">
            <div>
                <h3 class="fluent-title-3">Display Text Example</h3>
                <p class="fluent-body-2">Used for hero headings and marketing content - <strong>40px, Bold</strong></p>
            </div>
            
            <div>
                <h4 class="fluent-subtitle-1">Subtitle Example</h4>
                <p class="fluent-body-2">Used for section descriptions and secondary headings - <strong>20px, Semibold</strong></p>
            </div>
            
            <div>
                <p class="fluent-body-1">Body Text Example</p>
                <p class="fluent-body-2">Primary content text with optimal reading comfort - <strong>16px, Regular</strong></p>
            </div>
            
            <div>
                <p class="fluent-caption">Caption Text Example - Used for metadata and supplementary information</p>
            </div>
        </div>
    </section>

    <!-- Interactive Components Section -->
    <section class="fluent-card" style="margin-bottom: var(--spacingHorizontalXXXL);">
        <h2 class="fluent-title-2">Interactive Components</h2>
        <p class="fluent-body-1">
            Fluent UI components follow consistent interaction patterns with proper focus management and WCAG AA compliance.
        </p>
        
        <!-- Button Group Demonstration -->
        <div class="fluent-stack">
            <div>
                <h3 class="fluent-subtitle-1">Button Variants</h3>
                <div class="fluent-stack-horizontal">
                    <!-- Primary Action Button -->
                    <button class="fluent-button fluent-button-primary" @onclick="HandlePrimaryAction">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
                            <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM6.5 4.5v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3a.5.5 0 0 0-1 0Z"/>
                        </svg>
                        Primary Action
                    </button>
                    
                    <!-- Secondary Action Button -->
                    <button class="fluent-button fluent-button-secondary" @onclick="HandleSecondaryAction">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                            <path d="M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"/>
                        </svg>
                        Secondary Action
                    </button>
                    
                    <!-- Subtle Action Button -->
                    <button class="fluent-button fluent-button-subtle" @onclick="HandleSubtleAction">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
                            <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                            <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.292-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.292c.415.764-.42 1.6-1.185 1.184l-.292-.159a1.873 1.873 0 0 0-2.692 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.693-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.292A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
                        </svg>
                        Settings
                    </button>
                </div>
                <p class="fluent-caption" style="margin-top: var(--spacingHorizontalS);">
                    Buttons follow Microsoft's interaction design with proper focus rings and hover states.
                </p>
            </div>

            <!-- Message Bar States -->
            <div style="margin-top: var(--spacingHorizontalXXL);">
                <h3 class="fluent-subtitle-1">Message Bar States</h3>
                
                @if (showWarningMessage)
                {
                    <div class="fluent-messagebar fluent-messagebar-warning">
                        <svg class="fluent-messagebar-icon" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
                            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
                        </svg>
                        <div>This is a warning message providing contextual feedback to users about potential issues.</div>
                    </div>
                }

                @if (showErrorMessage)
                {
                    <div class="fluent-messagebar fluent-messagebar-error">
                        <svg class="fluent-messagebar-icon" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L8 7.293 5.354 4.646a.5.5 0 0 1 0-.708z"/>
                        </svg>
                        <div>Error message indicating that an action could not be completed. Please try again.</div>
                    </div>
                }

                @if (showSuccessMessage)
                {
                    <div class="fluent-messagebar fluent-messagebar-success">
                        <svg class="fluent-messagebar-icon" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
                            <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0Zm3.646 4.146-4.5 4.5a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L7 7.293l4.146-4.147a.5.5 0 0 1 .708.708Z"/>
                        </svg>
                        <div>Success! Your action has been completed successfully.</div>
                    </div>
                }
            </div>
        </div>
    </section>

    <!-- Responsive Grid Layout Demo -->
    <section>
        <h2 class="fluent-title-2">Responsive Grid Layout</h2>
        <p class="fluent-body-1">
            This grid automatically adapts to different screen sizes using CSS Grid with proper spacing tokens.
        </p>
        
        <div class="fluent-grid">
            <!-- Feature Card 1 -->
            <div class="fluent-card">
                <div style="display: flex; align-items: center; gap: var(--spacingHorizontalM); margin-bottom: var(--spacingHorizontalL);">
                    <div style="width: 32px; height: 32px; background: var(--colorBrandBackground); border-radius: var(--borderRadiusMedium); display: flex; align-items: center; justify-content: center;">
                        <svg width="20" height="20" viewBox="0 0 16 16" fill="white" aria-hidden="true">
                            <path d="M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.636 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-1.383zm.653.757c-.757.653-1.153 1.44-1.153 2.056v.448l-.445.049C2.064 6.805 1 7.952 1 9.318 1 10.785 2.23 12 3.781 12h8.906C13.98 12 15 10.988 15 9.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 4.825 10.328 3 8 3a4.53 4.53 0 0 0-2.941 1.1z"/>
                        </svg>
                    </div>
                    <h3 class="fluent-title-3" style="margin: 0;">Cloud Integration</h3>
                </div>
                <p class="fluent-body-2">
                    Seamless integration with Azure Communication Services for reliable cross-tenant messaging capabilities.
                </p>
                <div style="margin-top: var(--spacingHorizontalL);">
                    <span class="fluent-caption" style="background: var(--colorNeutralBackground2); padding: var(--spacingHorizontalXS) var(--spacingHorizontalS); border-radius: var(--borderRadiusSmall);">Enterprise Ready</span>
                </div>
            </div>

            <!-- Feature Card 2 -->
            <div class="fluent-card">
                <div style="display: flex; align-items: center; gap: var(--spacingHorizontalM); margin-bottom: var(--spacingHorizontalL);">
                    <div style="width: 32px; height: 32px; background: var(--colorStatusSuccessForeground1); border-radius: var(--borderRadiusMedium); display: flex; align-items: center; justify-content: center;">
                        <svg width="20" height="20" viewBox="0 0 16 16" fill="white" aria-hidden="true">
                            <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
                        </svg>
                    </div>
                    <h3 class="fluent-title-3" style="margin: 0;">Security First</h3>
                </div>
                <p class="fluent-body-2">
                    Enterprise-grade authentication with Entra ID integration ensuring secure cross-organizational communication.
                </p>
                <div style="margin-top: var(--spacingHorizontalL);">
                    <span class="fluent-caption" style="background: var(--colorStatusSuccessBackground1); color: var(--colorStatusSuccessForeground1); padding: var(--spacingHorizontalXS) var(--spacingHorizontalS); border-radius: var(--borderRadiusSmall);">Secure</span>
                </div>
            </div>

            <!-- Feature Card 3 -->
            <div class="fluent-card">
                <div style="display: flex; align-items: center; gap: var(--spacingHorizontalM); margin-bottom: var(--spacingHorizontalL);">
                    <div style="width: 32px; height: 32px; background: var(--colorBrandForeground2); border-radius: var(--borderRadiusMedium); display: flex; align-items: center; justify-content: center;">
                        <svg width="20" height="20" viewBox="0 0 16 16" fill="white" aria-hidden="true">
                            <path d="M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1h8Zm-7.978-1A.261.261 0 0 1 7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002a.274.274 0 0 1-.014.002H7.022ZM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM6.936 9.28a5.88 5.88 0 0 0-1.23-.247A7.35 7.35 0 0 0 5 9c-4 0-5 3-5 4 0 .667.333 1 1 1h4.216A2.238 2.238 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816ZM4.92 10A5.493 5.493 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4Z"/>
                        </svg>
                    </div>
                    <h3 class="fluent-title-3" style="margin: 0;">User Experience</h3>
                </div>
                <p class="fluent-body-2">
                    Intuitive interface following Fluent Design principles with accessibility and responsive design built-in.
                </p>
                <div style="margin-top: var(--spacingHorizontalL);">
                    <span class="fluent-caption" style="background: var(--colorNeutralBackground2); padding: var(--spacingHorizontalXS) var(--spacingHorizontalS); border-radius: var(--borderRadiusSmall);">Accessible</span>
                </div>
            </div>
        </div>
    </section>

    <!-- Design Tokens Information -->
    <section class="fluent-card" style="margin-top: var(--spacingHorizontalXXXL);">
        <h2 class="fluent-title-2">Design System Features</h2>
        <div class="fluent-stack">
            <div>
                <h3 class="fluent-subtitle-1">🎨 Color Palette</h3>
                <p class="fluent-body-2">
                    Uses semantic color tokens with proper contrast ratios (WCAG AA compliant).
                    Neutral colors for layouts, brand colors for actions, and semantic colors for feedback.
                </p>
            </div>
            
            <div>
                <h3 class="fluent-subtitle-1">📐 Spacing System</h3>
                <p class="fluent-body-2">
                    Built on a 4px grid system ensuring consistent spacing throughout the interface.
                    Supports responsive design with proper scaling across device sizes.
                </p>
            </div>
            
            <div>
                <h3 class="fluent-subtitle-1">🔤 Typography</h3>
                <p class="fluent-body-2">
                    Hierarchical type scale using Segoe UI font family with appropriate weights and line heights
                    for optimal readability and visual hierarchy.
                </p>
            </div>
            
            <div>
                <h3 class="fluent-subtitle-1">♿ Accessibility</h3>
                <p class="fluent-body-2">
                    Built with screen readers in mind, includes proper focus management, semantic HTML,
                    and supports high contrast mode and reduced motion preferences.
                </p>
            </div>
        </div>

        <div style="margin-top: var(--spacingHorizontalXXL); padding-top: var(--spacingHorizontalXL); border-top: 1px solid var(--colorNeutralStroke2);">
            <p class="fluent-caption">
                <strong>Implementation Notes:</strong> This demo uses CSS custom properties (design tokens) to maintain consistency
                and enable easy theme switching. Components are built with semantic HTML and proper ARIA labels for accessibility.
            </p>
        </div>
    </section>
</div>

@code {
    // State management for interactive demonstrations
    private bool showSuccessMessage = true;
    private bool showWarningMessage = false;
    private bool showErrorMessage = false;

    /// <summary>
    /// Handles primary button action - demonstrates state management
    /// </summary>
    private void HandlePrimaryAction()
    {
        showSuccessMessage = true;
        showWarningMessage = false;
        showErrorMessage = false;
        
        // In a real application, this would trigger the primary workflow
        StateHasChanged();
    }

    /// <summary>
    /// Handles secondary button action - demonstrates warning feedback
    /// </summary>
    private void HandleSecondaryAction()
    {
        showSuccessMessage = false;
        showWarningMessage = true;
        showErrorMessage = false;
        
        // In a real application, this might trigger a confirmation dialog
        StateHasChanged();
    }

    /// <summary>
    /// Handles subtle button action - demonstrates error feedback
    /// </summary>
    private void HandleSubtleAction()
    {
        showSuccessMessage = false;
        showWarningMessage = false;
        showErrorMessage = true;
        
        // In a real application, this might open settings or configuration
        StateHasChanged();
    }
}